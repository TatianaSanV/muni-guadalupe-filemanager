generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categoria_Documento {
  id_categoria     Int         @id @default(autoincrement())
  nombre_categoria String?     @db.VarChar(255)
  Documento        Documento[]
}

model Contenedor {
  id_contenedor      Int              @id @default(autoincrement())
  tipo_contenedor_id Int?
  estante_id         Int?
  anio               DateTime?        @db.Date
  nombre             String?          @db.VarChar(255)
  descripcion        String?          @db.VarChar(255)
  fila               String           @db.VarChar(10)
  columna            String?          @db.VarChar(10)
  Estante            Estante?         @relation(fields: [estante_id], references: [id_estante], onDelete: NoAction, onUpdate: NoAction, map: "fk_contenedor_estante")
  Tipo_Contenedor    Tipo_Contenedor? @relation(fields: [tipo_contenedor_id], references: [id_tipo_contenedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_contenedor_tipo")
  Documento          Documento[]
}

model Documento {
  id_documento        Int                  @id @default(autoincrement())
  contenedor_id       Int?
  nombre              String?              @db.VarChar(255)
  descripcion         String?              @db.VarChar(255)
  anio                String?              @db.VarChar(4)
  categoria_id        Int?
  documento_url       String
  Categoria_Documento Categoria_Documento? @relation(fields: [categoria_id], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_documento_categoria")
  Contenedor          Contenedor?          @relation(fields: [contenedor_id], references: [id_contenedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_documento_contenedor")
  Solicitud           Solicitud[]
  Transaccion         Transaccion[]
}

model Estado_Transaccion {
  id_estado     Int           @id @default(autoincrement())
  nombre_estado String?       @db.VarChar(255)
  Transaccion   Transaccion[]
}

model Estante {
  id_estante     Int          @id @default(autoincrement())
  nombre_estante String?      @db.VarChar(255)
  Contenedor     Contenedor[]
}

model Historial_Transacciones {
  id_historial   Int          @id @default(autoincrement())
  transaccion_id Int?
  estado         String?      @db.VarChar(255)
  fecha_cambio   DateTime?    @db.Date
  Transaccion    Transaccion? @relation(fields: [transaccion_id], references: [id_transaccion], onDelete: NoAction, onUpdate: NoAction, map: "fk_historial_transaccion")
}

model Permisos {
  id_permiso     Int            @id @default(autoincrement())
  nombre_permiso String?        @db.VarChar(255)
  Rol_Permisos   Rol_Permisos[]
}

model Rol {
  id_rol       Int            @id @default(autoincrement())
  nombre_rol   String?        @db.VarChar(255)
  descripcion  String?        @db.VarChar(255)
  Rol_Permisos Rol_Permisos[]
  Usuario      Usuario[]
}

model Rol_Permisos {
  id_rol_permiso Int       @id @default(autoincrement())
  rol_id         Int?
  permiso_id     Int?
  Permisos       Permisos? @relation(fields: [permiso_id], references: [id_permiso], onDelete: NoAction, onUpdate: NoAction, map: "fk_rol_permiso_permiso")
  Rol            Rol?      @relation(fields: [rol_id], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "fk_rol_permiso_rol")
}

model Solicitud {
  id_solicitud     Int        @id @default(autoincrement())
  usuario_id       Int?
  documento_id     Int?
  fecha_solicitud  DateTime?  @db.Date
  estado_solicitud String?    @db.VarChar(255)
  motivo           String?    @db.VarChar(255)
  Documento        Documento? @relation(fields: [documento_id], references: [id_documento], onDelete: NoAction, onUpdate: NoAction, map: "fk_solicitud_documento")
  Usuario          Usuario?   @relation(fields: [usuario_id], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_solicitud_usuario")
}

model Tipo_Contenedor {
  id_tipo_contenedor Int          @id @default(autoincrement())
  nombre             String?      @db.VarChar(255)
  Contenedor         Contenedor[]
}

model Transaccion {
  id_transaccion          Int                       @id @default(autoincrement())
  usuario_id              Int?
  documento_id            Int?
  tipo_transaccion        String?                   @db.VarChar(255)
  fecha_inicio            DateTime?                 @db.Date
  fecha_fin               DateTime?                 @db.Date
  estado_id               Int?
  Historial_Transacciones Historial_Transacciones[]
  Documento               Documento?                @relation(fields: [documento_id], references: [id_documento], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaccion_documento")
  Estado_Transaccion      Estado_Transaccion?       @relation(fields: [estado_id], references: [id_estado], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaccion_estado")
  Usuario                 Usuario?                  @relation(fields: [usuario_id], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaccion_usuario")
}

model Usuario {
  id_usuario    Int           @id @default(autoincrement())
  nombre        String?       @db.VarChar(255)
  email         String?       @db.VarChar(255)
  contrasenia   String?       @db.VarChar(255)
  imagen_perfil String?       @db.VarChar(255)
  rol_id        Int?
  Solicitud     Solicitud[]
  Transaccion   Transaccion[]
  Rol           Rol?          @relation(fields: [rol_id], references: [id_rol], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_rol")
}
